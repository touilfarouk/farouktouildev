(self.webpackChunk_arwes_app_play=self.webpackChunk_arwes_app_play||[]).push([[735],{9735:(e,n,r)=>{"use strict";r.r(n),r.d(n,{typeDefinitions:()=>t});const t=[{filename:"file:///node_modules/csstype/index.d.ts",code:r(16)},{filename:"file:///node_modules/@types/prop-types/index.d.ts",code:r(8362)},{filename:"file:///node_modules/@types/react/index.d.ts",code:r(9087)},{filename:"file:///node_modules/@types/react/global.d.ts",code:r(6909)},{filename:"file:///node_modules/@types/scheduler/tracing.d.ts",code:r(7958)},{filename:"file:///node_modules/@types/react-dom/index.d.ts",code:r(7681)},{filename:"file:///node_modules/@types/react-dom/client.d.ts",code:r(3680)},{filename:"file:///node_modules/@emotion/react/index.d.ts",code:r(4423)},{filename:"file:///node_modules/@emotion/react/css-prop.d.ts",code:r(3502)},{filename:"file:///node_modules/@emotion/react/helper.d.ts",code:r(2712)},{filename:"file:///node_modules/@emotion/react/jsx-dev-runtime.d.ts",code:r(8505)},{filename:"file:///node_modules/@emotion/react/jsx-namespace.d.ts",code:r(190)},{filename:"file:///node_modules/@emotion/react/jsx-runtime.d.ts",code:r(5411)},{filename:"file:///node_modules/@emotion/react/theming.d.ts",code:r(2342)},{filename:"file:///node_modules/@emotion/serialize/index.d.ts",code:r(1796)},{filename:"file:///node_modules/@emotion/utils/index.d.ts",code:r(7440)},{filename:"file:///node_modules/motion/index.d.ts",code:"\n      declare module 'motion' {\n        interface MotionOptions {\n          repeat?: number\n          direction?: string\n          duration?: number\n          easing?: string\n        }\n\n        interface AnimationControls {\n          cancel: () => void\n          finished: Promise<void>\n        }\n\n        declare function AnimateFunction (\n          element: SVGElement | SVGElement[] | HTMLElement | HTMLElement[],\n          props: Record<string, any>,\n          options: MotionOptions\n        ): AnimationControls;\n\n        declare function AnimateFunction (\n          (progress: number) => void,\n          options: MotionOptions\n        ): AnimationControls;\n\n        declare function Stagger (\n          duration: number,\n          options?: { start: any, from: any, easing: any }\n        ): any;\n\n        const animate: AnimateFunction;\n        const stagger: Stagger;\n\n        export { AnimationControls, animate, stagger };\n      }\n    "},{filename:"file:///node_modules/empanada/index.d.ts",code:"\n      declare module 'empanada' {\n        export const LOREM_IPSUM = string;\n        export const createRandomEmail: () => string;\n        export const createRandomWords: (length?: number) => string;\n      }\n    "},{filename:"file:///node_modules/@arwes/tools/index.d.ts",code:r(544)},{filename:"file:///node_modules/@arwes/theme/index.d.ts",code:r(8819)},{filename:"file:///node_modules/@arwes/animator/index.d.ts",code:r(971)},{filename:"file:///node_modules/@arwes/animated/index.d.ts",code:r(2105)},{filename:"file:///node_modules/@arwes/bleeps/index.d.ts",code:r(2574)},{filename:"file:///node_modules/@arwes/text/index.d.ts",code:r(3936)},{filename:"file:///node_modules/@arwes/frames/index.d.ts",code:r(1599)},{filename:"file:///node_modules/@arwes/bgs/index.d.ts",code:r(5172)},{filename:"file:///node_modules/@arwes/core/index.d.ts",code:r(8572)},{filename:"file:///node_modules/arwes/index.d.ts",code:r(73)},{filename:"file:///node_modules/@arwes/react-styles/index.d.ts",code:r(2900)},{filename:"file:///node_modules/@arwes/react-animator/index.d.ts",code:r(850)},{filename:"file:///node_modules/@arwes/react-animated/index.d.ts",code:r(8852)},{filename:"file:///node_modules/@arwes/react-bleeps/index.d.ts",code:r(6319)},{filename:"file:///node_modules/@arwes/react-text/index.d.ts",code:r(4935)},{filename:"file:///node_modules/@arwes/react-frames/index.d.ts",code:r(1586)},{filename:"file:///node_modules/@arwes/react-bgs/index.d.ts",code:r(5488)},{filename:"file:///node_modules/@arwes/react-core/index.d.ts",code:r(7527)},{filename:"file:///node_modules/@arwes/react/index.d.ts",code:r(8266)}]},2105:e=>{e.exports="declare module '@arwes/animated/createAnimation/createAnimation' {\n  import { type Easing } from '@arwes/animated/easing/index';\n  interface AnimationProps {\n      /**\n       * Duration in seconds.\n       */\n      duration: number;\n      easing?: Easing;\n      direction?: 'normal' | 'reverse';\n      onUpdate: (progress: number) => void;\n      onComplete?: () => void;\n      onCancel?: () => void;\n  }\n  interface Animation {\n      isPending: () => boolean;\n      cancel: () => void;\n  }\n  const createAnimation: (props: AnimationProps) => Animation;\n  export type { AnimationProps, Animation };\n  export { createAnimation };\n\n}\ndeclare module '@arwes/animated/createAnimation/index' {\n  export * from '@arwes/animated/createAnimation/createAnimation';\n\n}\ndeclare module '@arwes/animated/easing/easing' {\n  type EasingFn = (x: number) => number;\n  const easing: {\n      linear: (x: number) => number;\n      inQuad: (x: number) => number;\n      outQuad: (x: number) => number;\n      inOutQuad: (x: number) => number;\n      inCubic: (x: number) => number;\n      outCubic: (x: number) => number;\n      inOutCubic: (x: number) => number;\n      inQuart: (x: number) => number;\n      outQuart: (x: number) => number;\n      inOutQuart: (x: number) => number;\n      inQuint: (x: number) => number;\n      outQuint: (x: number) => number;\n      inOutQuint: (x: number) => number;\n      inSine: (x: number) => number;\n      outSine: (x: number) => number;\n      inOutSine: (x: number) => number;\n      inExpo: (x: number) => number;\n      outExpo: (x: number) => number;\n      inOutExpo: (x: number) => number;\n      inCirc: (x: number) => number;\n      outCirc: (x: number) => number;\n      inOutCirc: (x: number) => number;\n      inBack: (x: number) => number;\n      outBack: (x: number) => number;\n      inOutBack: (x: number) => number;\n      inElastic: (x: number) => number;\n      outElastic: (x: number) => number;\n      inOutElastic: (x: number) => number;\n      inBounce: (x: number) => number;\n      outBounce: (x: number) => number;\n      inOutBounce: (x: number) => number;\n  };\n  type Easing = EasingFn | keyof typeof easing;\n  export type { Easing, EasingFn };\n  export { easing };\n\n}\ndeclare module '@arwes/animated/easing/index' {\n  export * from '@arwes/animated/easing/easing';\n\n}\ndeclare module '@arwes/animated/index' {\n  export * from '@arwes/animated/easing/index';\n  export * from '@arwes/animated/createAnimation/index';\n\n}\n\ndeclare module '@arwes/animated' {\n  import main = require('@arwes/animated/index');\n  export = main;\n}\n"},971:e=>{e.exports="declare module '@arwes/animator/constants' {\n  import type { AnimatorState, AnimatorAction, AnimatorManagerName, AnimatorDuration, AnimatorSettings } from '@arwes/animator/types';\n  export const ANIMATOR_STATES: {\n      [P in AnimatorState]: P;\n  };\n  export const ANIMATOR_ACTIONS: {\n      [P in AnimatorAction]: P;\n  };\n  export const ANIMATOR_MANAGER_NAMES: {\n      [P in AnimatorManagerName]: P;\n  };\n  export const ANIMATOR_DEFAULT_DURATION: AnimatorDuration;\n  export const ANIMATOR_DEFAULT_SETTINGS: AnimatorSettings;\n\n}\ndeclare module '@arwes/animator/createAnimatorSystem/createAnimatorSystem' {\n  import type { AnimatorSystem } from '@arwes/animator/types';\n  const createAnimatorSystem: () => AnimatorSystem;\n  export { createAnimatorSystem };\n\n}\ndeclare module '@arwes/animator/createAnimatorSystem/index' {\n  export * from '@arwes/animator/createAnimatorSystem/createAnimatorSystem';\n\n}\ndeclare module '@arwes/animator/index' {\n  export * from '@arwes/animator/types';\n  export * from '@arwes/animator/constants';\n  export * from '@arwes/animator/createAnimatorSystem/index';\n\n}\ndeclare module '@arwes/animator/internal/createAnimatorMachine/createAnimatorMachine' {\n  import type { AnimatorNode, AnimatorState, AnimatorAction } from '@arwes/animator/types';\n  interface AnimatorMachine {\n      getState: () => AnimatorState;\n      send: (action: AnimatorAction) => void;\n  }\n  const createAnimatorMachine: (node: AnimatorNode, initialState: AnimatorState) => AnimatorMachine;\n  export { createAnimatorMachine };\n\n}\ndeclare module '@arwes/animator/internal/createAnimatorMachine/index' {\n  export * from '@arwes/animator/internal/createAnimatorMachine/createAnimatorMachine';\n\n}\ndeclare module '@arwes/animator/internal/createAnimatorManager/createAnimatorManager' {\n  import type { AnimatorManagerName, AnimatorManager, AnimatorNode } from '@arwes/animator/types';\n  const createAnimatorManager: (node: AnimatorNode, manager: AnimatorManagerName) => AnimatorManager;\n  export { createAnimatorManager };\n\n}\ndeclare module '@arwes/animator/internal/createAnimatorManager/index' {\n  export * from '@arwes/animator/internal/createAnimatorManager/createAnimatorManager';\n\n}\ndeclare module '@arwes/animator/types' {\n  import type { TOScheduler } from '@arwes/tools';\n  export interface AnimatorControl {\n      readonly getSettings: () => AnimatorSettings;\n      readonly setDynamicSettings: (settings: AnimatorSettingsPartial | null) => void;\n      readonly getDynamicSettings: () => AnimatorSettingsPartial | null;\n      readonly setForeignRef: (ref: unknown) => void;\n      readonly getForeignRef: () => unknown;\n  }\n  export type AnimatorState = 'entered' | 'entering' | 'exiting' | 'exited';\n  export type AnimatorAction = 'setup' | 'enter' | 'enterEnd' | 'exit' | 'exitEnd' | 'update' | 'refresh';\n  export type AnimatorManagerName = 'parallel' | 'stagger' | 'staggerReverse' | 'sequence' | 'sequenceReverse' | 'switch';\n  export type AnimatorSubscriber = (node: AnimatorNode) => void;\n  export interface AnimatorManager {\n      readonly name: AnimatorManagerName;\n      readonly getDurationEnter: (childrenNodes?: AnimatorNode[]) => number;\n      readonly enterChildren: (childrenNodes?: AnimatorNode[]) => void;\n      readonly destroy?: () => void;\n  }\n  export interface AnimatorNode {\n      readonly id: string;\n      readonly control: AnimatorControl;\n      readonly parent?: AnimatorNode;\n      readonly children: Set<AnimatorNode>;\n      readonly subscribers: Set<AnimatorSubscriber>;\n      readonly scheduler: TOScheduler;\n      readonly duration: {\n          enter: number;\n          exit: number;\n      };\n      readonly state: AnimatorState;\n      readonly subscribe: (subscriber: AnimatorSubscriber) => (() => void);\n      readonly unsubscribe: (subscriber: AnimatorSubscriber) => void;\n      readonly send: (newAction: AnimatorAction) => void;\n      manager: AnimatorManager;\n  }\n  export interface AnimatorSystem {\n      readonly id: string;\n      readonly root: AnimatorNode | null;\n      readonly register: (parentNode: AnimatorNode | undefined | null, control: AnimatorControl) => AnimatorNode;\n      readonly unregister: (node: AnimatorNode) => void;\n  }\n  export interface AnimatorDuration {\n      enter: number;\n      exit: number;\n      delay: number;\n      offset: number;\n      stagger: number;\n      [duration: string]: number;\n  }\n  export interface AnimatorSettings {\n      active: boolean;\n      duration: AnimatorDuration;\n      manager: AnimatorManagerName;\n      merge: boolean;\n      combine: boolean;\n      initialState: 'exited' | 'entered';\n      condition?: (node: AnimatorNode) => boolean;\n      onTransition?: (node: AnimatorNode) => void;\n  }\n  export type AnimatorSettingsPartial = Partial<Omit<AnimatorSettings, 'duration'>> & {\n      duration?: Partial<AnimatorDuration>;\n  };\n  export interface AnimatorInterface {\n      readonly system: AnimatorSystem;\n      readonly node: AnimatorNode;\n  }\n\n}\n\ndeclare module '@arwes/animator' {\n  import main = require('@arwes/animator/index');\n  export = main;\n}\n"},5172:e=>{e.exports="declare module '@arwes/bgs/index' {\n  export const ARWES_BGS = \"@arwes/bgs\";\n\n}\n\ndeclare module '@arwes/bgs' {\n  import main = require('@arwes/bgs/index');\n  export = main;\n}\n"},2574:e=>{e.exports="declare module '@arwes/bleeps/constants' {\n  import type { BleepCategory } from '@arwes/bleeps/types';\n  export const BLEEPS_CATEGORIES: {\n      [P in BleepCategory]: P;\n  };\n\n}\ndeclare module '@arwes/bleeps/createBleep/createBleep' {\n  import type { BleepProps, Bleep } from '@arwes/bleeps/types';\n  const createBleep: (props: BleepProps) => Bleep | null;\n  export { createBleep };\n\n}\ndeclare module '@arwes/bleeps/createBleep/index' {\n  export * from '@arwes/bleeps/createBleep/createBleep';\n\n}\ndeclare module '@arwes/bleeps/createBleepsManager/createBleepsManager' {\n  import type { BleepsManager, BleepsManagerProps } from '@arwes/bleeps/types';\n  const createBleepsManager: <Names extends string>(props: BleepsManagerProps<Names>) => BleepsManager<Names>;\n  export { createBleepsManager };\n\n}\ndeclare module '@arwes/bleeps/createBleepsManager/index' {\n  export * from '@arwes/bleeps/createBleepsManager/createBleepsManager';\n\n}\ndeclare module '@arwes/bleeps/index' {\n  export * from '@arwes/bleeps/types';\n  export * from '@arwes/bleeps/constants';\n  export * from '@arwes/bleeps/createBleep/index';\n  export * from '@arwes/bleeps/createBleepsManager/index';\n\n}\ndeclare module '@arwes/bleeps/types' {\n  export type BleepCategory = 'background' | 'transition' | 'interaction' | 'notification';\n  export interface BleepGeneralProps {\n      readonly preload?: boolean;\n      readonly volume?: number;\n      readonly fetchHeaders?: Headers;\n      readonly disabled?: boolean;\n  }\n  export interface BleepProps extends Omit<BleepGeneralProps, 'disabled'> {\n      readonly sources: Array<Readonly<{\n          src: string;\n          type: string;\n      }>>;\n      readonly loop?: boolean;\n      readonly category?: BleepCategory;\n      readonly context?: AudioContext;\n      readonly masterGain?: GainNode;\n  }\n  export interface BleepPropsUpdatable {\n      readonly volume?: number;\n  }\n  export interface Bleep {\n      /**\n       * Get audio duration in seconds.\n       */\n      readonly duration: number;\n      readonly isLoaded: boolean;\n      readonly isPlaying: boolean;\n      readonly play: (callerID?: string) => void;\n      readonly stop: (callerID?: string) => void;\n      readonly load: () => void;\n      readonly unload: () => void;\n      readonly update: (props: BleepPropsUpdatable) => void;\n  }\n  export interface BleepMasterProps {\n      readonly volume?: number;\n  }\n  export interface BleepsManagerProps<Names extends string = string> {\n      readonly master?: BleepMasterProps;\n      readonly common?: BleepGeneralProps;\n      readonly categories?: {\n          readonly [P in BleepCategory]?: BleepGeneralProps;\n      };\n      readonly bleeps: Record<Names, Omit<BleepProps, 'context' | 'masterGain'>>;\n  }\n  export interface BleepsManagerPropsMasterUpdatable {\n      readonly volume?: number;\n  }\n  export interface BleepsManagerPropsGeneralUpdatable extends BleepPropsUpdatable {\n      readonly disabled?: boolean;\n  }\n  export interface BleepsManagerPropsBleepUpdatable extends BleepPropsUpdatable {\n      readonly disabled?: boolean;\n  }\n  export interface BleepsManagerPropsUpdatable<Names extends string = string> {\n      readonly master?: BleepsManagerPropsMasterUpdatable;\n      readonly common?: BleepsManagerPropsGeneralUpdatable;\n      readonly categories?: {\n          readonly [P in BleepCategory]?: BleepsManagerPropsGeneralUpdatable;\n      };\n      readonly bleeps?: Record<Names, BleepsManagerPropsBleepUpdatable>;\n  }\n  export interface BleepsManager<Names extends string = string> {\n      readonly bleeps: Record<Names, Bleep | null>;\n      readonly unload: () => void;\n      readonly update: (props: BleepsManagerPropsUpdatable<Names>) => void;\n  }\n\n}\n\ndeclare module '@arwes/bleeps' {\n  import main = require('@arwes/bleeps/index');\n  export = main;\n}\n"},8572:e=>{e.exports="declare module '@arwes/core/createAppStylesBaseline/createAppStylesBaseline' {\n  import type { Properties as CSSProperties } from 'csstype';\n  import { type AppTheme } from '@arwes/theme';\n  const createAppStylesBaseline: (theme: AppTheme) => Record<string, CSSProperties>;\n  export { createAppStylesBaseline };\n\n}\ndeclare module '@arwes/core/createAppStylesBaseline/index' {\n  export * from '@arwes/core/createAppStylesBaseline/createAppStylesBaseline';\n\n}\ndeclare module '@arwes/core/index' {\n  export * from '@arwes/core/createAppStylesBaseline/index';\n\n}\n\ndeclare module '@arwes/core' {\n  import main = require('@arwes/core/index');\n  export = main;\n}\n"},1599:e=>{e.exports="declare module '@arwes/frames/createFrameKranoxClip/createFrameKranoxClip' {\n  interface CreateFrameKranoxClipProps {\n      squareSize?: number | string;\n      padding?: number | string;\n      strokeWidth?: number | string;\n      smallLineLength?: number | string;\n      largeLineLength?: number | string;\n  }\n  const createFrameKranoxClip: (props?: CreateFrameKranoxClipProps) => string;\n  export type { CreateFrameKranoxClipProps };\n  export { createFrameKranoxClip };\n\n}\ndeclare module '@arwes/frames/createFrameKranoxClip/index' {\n  export * from '@arwes/frames/createFrameKranoxClip/createFrameKranoxClip';\n\n}\ndeclare module '@arwes/frames/createFrameOctagonClip/createFrameOctagonClip' {\n  interface CreateFrameOctagonClipProps {\n      squareSize?: number | string;\n      leftTop?: boolean;\n      leftBottom?: boolean;\n      rightTop?: boolean;\n      rightBottom?: boolean;\n  }\n  const createFrameOctagonClip: (props?: CreateFrameOctagonClipProps) => string;\n  export type { CreateFrameOctagonClipProps };\n  export { createFrameOctagonClip };\n\n}\ndeclare module '@arwes/frames/createFrameOctagonClip/index' {\n  export * from '@arwes/frames/createFrameOctagonClip/createFrameOctagonClip';\n\n}\ndeclare module '@arwes/frames/formatFrameSVGPath/formatFrameSVGPath' {\n  import type { FrameSVGPath } from '@arwes/frames/types';\n  const formatFrameSVGPath: (width: number, height: number, path: FrameSVGPath) => string;\n  export { formatFrameSVGPath };\n\n}\ndeclare module '@arwes/frames/formatFrameSVGPath/index' {\n  export * from '@arwes/frames/formatFrameSVGPath/formatFrameSVGPath';\n\n}\ndeclare module '@arwes/frames/index' {\n  export * from '@arwes/frames/types';\n  export * from '@arwes/frames/formatFrameSVGPath/index';\n  export * from '@arwes/frames/renderFrameSVGPaths/index';\n  export * from '@arwes/frames/createFrameOctagonClip/index';\n  export * from '@arwes/frames/createFrameKranoxClip/index';\n\n}\ndeclare module '@arwes/frames/renderFrameSVGPaths/index' {\n  export * from '@arwes/frames/renderFrameSVGPaths/renderFrameSVGPaths';\n\n}\ndeclare module '@arwes/frames/renderFrameSVGPaths/renderFrameSVGPaths' {\n  import type { FrameSVGPathGeneric } from '@arwes/frames/types';\n  const renderFrameSVGPaths: (parentElement: SVGElement, width: number, height: number, pathsCustom: FrameSVGPathGeneric[]) => void;\n  export { renderFrameSVGPaths };\n\n}\ndeclare module '@arwes/frames/types' {\n  import type * as CSS from 'csstype';\n  type FrameSVGPathCommandName = 'M' | 'm' | 'L' | 'l' | 'H' | 'h' | 'V' | 'v' | 'C' | 'c' | 'S' | 's' | 'Q' | 'q' | 'T' | 't' | 'A' | 'a';\n  export type FrameSVGPathDimension = number | string;\n  export type FrameSVGPathCommand = 'Z' | 'z' | [FrameSVGPathCommandName, ...FrameSVGPathDimension[]];\n  export type FrameSVGPath = FrameSVGPathCommand[];\n  export type FrameSVGStyle = CSS.Properties;\n  export interface FrameSVGPathCustom {\n      name?: string;\n      id?: string;\n      className?: string;\n      style?: FrameSVGStyle;\n      path: FrameSVGPath;\n  }\n  export type FrameSVGPathGeneric = FrameSVGPath | FrameSVGPathCustom;\n  export {};\n\n}\n\ndeclare module '@arwes/frames' {\n  import main = require('@arwes/frames/index');\n  export = main;\n}\n"},8852:e=>{e.exports="declare module '@arwes/react-animated/Animated/Animated' {\n  import { type HTMLProps, type SVGProps, type CSSProperties, type ReactElement, type ForwardedRef, type ReactNode } from 'react';\n  import { type NoInfer } from '@arwes/tools';\n  import type { AnimatedProp } from '@arwes/react-animated/types';\n  interface AnimatedProps<E extends HTMLElement | SVGElement = HTMLDivElement> {\n      elementRef?: ForwardedRef<E>;\n      className?: string;\n      style?: CSSProperties;\n      animated?: AnimatedProp;\n      hideOnExited?: boolean;\n      hideOnEntered?: boolean;\n      as?: keyof HTMLElementTagNameMap | keyof SVGElementTagNameMap;\n      children?: ReactNode;\n  }\n  const Animated: <E extends HTMLElement | SVGElement = HTMLDivElement, P extends HTMLProps<HTMLElement> | SVGProps<SVGElement> = HTMLProps<HTMLDivElement>>(props: AnimatedProps<E> & NoInfer<P>) => ReactElement;\n  export type { AnimatedProps };\n  export { Animated };\n\n}\ndeclare module '@arwes/react-animated/Animated/index' {\n  import { Animated as Component } from '@arwes/react-animated/Animated/Animated';\n  const Animated: typeof Component;\n  export * from '@arwes/react-animated/Animated/Animated';\n  export { Animated };\n\n}\ndeclare module '@arwes/react-animated/AnimatedX/AnimatedX' {\n  import { type HTMLProps, type SVGProps, type CSSProperties, type ReactElement, type ForwardedRef, type ReactNode } from 'react';\n  import { type NoInfer } from '@arwes/tools';\n  import type { AnimatedProp } from '@arwes/react-animated/types';\n  interface AnimatedXProps<E extends HTMLElement | SVGElement = HTMLDivElement> {\n      elementRef?: ForwardedRef<E>;\n      className?: string;\n      style?: CSSProperties;\n      state?: string;\n      animated?: AnimatedProp;\n      as?: keyof HTMLElementTagNameMap | keyof SVGElementTagNameMap;\n      children?: ReactNode;\n  }\n  const AnimatedX: <E extends HTMLElement | SVGElement = HTMLDivElement, P extends HTMLProps<HTMLElement> | SVGProps<SVGElement> = HTMLProps<HTMLDivElement>>(props: AnimatedXProps<E> & NoInfer<P>) => ReactElement;\n  export type { AnimatedXProps };\n  export { AnimatedX };\n\n}\ndeclare module '@arwes/react-animated/AnimatedX/index' {\n  import { AnimatedX as Component } from '@arwes/react-animated/AnimatedX/AnimatedX';\n  const AnimatedX: typeof Component;\n  export * from '@arwes/react-animated/AnimatedX/AnimatedX';\n  export { AnimatedX };\n\n}\ndeclare module '@arwes/react-animated/animations/animations' {\n  import type { AnimatedSettings } from '@arwes/react-animated/types';\n  const aa: (prop: string, from: number | string, to: number | string, back?: number | string) => AnimatedSettings;\n  const aaOpacity: () => AnimatedSettings;\n  const aaVisibility: () => AnimatedSettings;\n  export { aa, aaOpacity, aaVisibility };\n\n}\ndeclare module '@arwes/react-animated/animations/index' {\n  export * from '@arwes/react-animated/animations/animations';\n\n}\ndeclare module '@arwes/react-animated/constants' {\n  import type { AnimatedSettings } from '@arwes/react-animated/types';\n  export const ANIMATED_ANIMATIONS_EMPTY: Record<string, AnimatedSettings>;\n\n}\ndeclare module '@arwes/react-animated/index' {\n  export * from '@arwes/react-animated/types';\n  export * from '@arwes/react-animated/constants';\n  export * from '@arwes/react-animated/Animated/index';\n  export * from '@arwes/react-animated/AnimatedX/index';\n  export * from '@arwes/react-animated/useAnimatedAnimations/index';\n  export * from '@arwes/react-animated/animations/index';\n\n}\ndeclare module '@arwes/react-animated/internal/formatAnimatedCSSPropsShorthands/formatAnimatedCSSPropsShorthands' {\n  import type { CSSProperties } from 'react';\n  import type { AnimatedCSSProps } from '@arwes/react-animated/types';\n  const formatAnimatedCSSPropsShorthands: (cssPropertiesEnhanced?: AnimatedCSSProps) => CSSProperties | undefined;\n  export { formatAnimatedCSSPropsShorthands };\n\n}\ndeclare module '@arwes/react-animated/internal/formatAnimatedCSSPropsShorthands/index' {\n  export * from '@arwes/react-animated/internal/formatAnimatedCSSPropsShorthands/formatAnimatedCSSPropsShorthands';\n\n}\ndeclare module '@arwes/react-animated/types' {\n  import type { CSSProperties, HTMLProps, SVGProps } from 'react';\n  import type { MotionKeyframesDefinition, AnimationOptionsWithOverrides } from '@motionone/dom';\n  import type { AnimatorState } from '@arwes/animator';\n  export interface AnimatedCSSPropsShorthands {\n      x?: number | string;\n      y?: number | string;\n      z?: number | string;\n      rotate?: number | string;\n      rotateX?: number | string;\n      rotateY?: number | string;\n      rotateZ?: number | string;\n      skew?: number | string;\n      skewX?: number | string;\n      skewY?: number | string;\n      scale?: number | string;\n      scaleX?: number | string;\n      scaleY?: number | string;\n      scaleZ?: number | string;\n  }\n  export type AnimatedCSSProps = Omit<CSSProperties, keyof AnimatedCSSPropsShorthands> & AnimatedCSSPropsShorthands;\n  export type AnimatedSettingsTransitionDefinition = MotionKeyframesDefinition & {\n      duration?: number;\n      delay?: AnimationOptionsWithOverrides['delay'];\n      easing?: AnimationOptionsWithOverrides['easing'];\n      options?: AnimationOptionsWithOverrides;\n  };\n  export interface AnimatedSettingsTransitionFunctionConfig {\n      element: HTMLElement | SVGElement;\n      duration: number;\n  }\n  export interface AnimatedSettingsTransitionFunctionReturn {\n      stop: () => void;\n  }\n  export type AnimatedSettingsTransitionFunction = ((config: AnimatedSettingsTransitionFunctionConfig) => AnimatedSettingsTransitionFunctionReturn) | ((config: AnimatedSettingsTransitionFunctionConfig) => void);\n  export type AnimatedSettingsTransitionTypes = AnimatedSettingsTransitionFunction | AnimatedSettingsTransitionDefinition;\n  export type AnimatedSettingsTransition = AnimatedSettingsTransitionTypes | AnimatedSettingsTransitionTypes[];\n  export interface AnimatedSettings {\n      initialAttributes?: HTMLProps<HTMLDivElement> | SVGProps<SVGPathElement>;\n      initialStyle?: AnimatedCSSProps;\n      transitions?: {\n          [P in AnimatorState]?: AnimatedSettingsTransition | undefined;\n      } & {\n          [P in string]?: AnimatedSettingsTransition | undefined;\n      };\n  }\n  export type AnimatedProp = AnimatedSettings | Array<AnimatedSettings | undefined> | undefined;\n  export type AnimatedAnimation = AnimatedSettings | AnimatedSettings[];\n  export type AnimatedAnimations = {\n      [P in AnimatorState]?: AnimatedAnimation;\n  };\n  export type AnimatedAnimationsCreatorFunction<P = undefined> = (props: P) => AnimatedAnimations;\n  export type AnimatedAnimationsCreator<P = undefined> = undefined | false | AnimatedAnimations | AnimatedAnimationsCreatorFunction<P>;\n\n}\ndeclare module '@arwes/react-animated/useAnimatedAnimations/index' {\n  export * from '@arwes/react-animated/useAnimatedAnimations/useAnimatedAnimations';\n\n}\ndeclare module '@arwes/react-animated/useAnimatedAnimations/useAnimatedAnimations' {\n  import type { AnimatedAnimations, AnimatedAnimationsCreator, AnimatedAnimationsCreatorFunction } from '@arwes/react-animated/types';\n  const useAnimatedAnimations: <P = undefined>(animationsList: [AnimatedAnimationsCreatorFunction<P>, AnimatedAnimationsCreator<P>], props: P, dependencies: unknown[]) => AnimatedAnimations;\n  export { useAnimatedAnimations };\n\n}\n\ndeclare module '@arwes/react-animated' {\n  import main = require('@arwes/react-animated/index');\n  export = main;\n}\n"},850:e=>{e.exports="declare module '@arwes/react-animator/Animator/Animator' {\n  import { type ReactElement } from 'react';\n  import type { AnimatorProps } from '@arwes/react-animator/Animator/Animator.types';\n  const Animator: (props: AnimatorProps) => ReactElement;\n  export { Animator };\n\n}\ndeclare module '@arwes/react-animator/Animator/Animator.types' {\n  import type { ForwardedRef, ReactNode, DependencyList } from 'react';\n  import type { AnimatorAction, AnimatorNode, AnimatorSettingsPartial } from '@arwes/animator';\n  export interface AnimatorProps extends AnimatorSettingsPartial {\n      root?: boolean;\n      disabled?: boolean;\n      dismissed?: boolean;\n      unmountOnExited?: boolean;\n      unmountOnEntered?: boolean;\n      unmountOnDisabled?: boolean;\n      checkToSendAction?: AnimatorAction;\n      checkToSend?: DependencyList;\n      nodeRef?: ForwardedRef<AnimatorNode>;\n      children?: ReactNode;\n  }\n\n}\ndeclare module '@arwes/react-animator/Animator/index' {\n  /// <reference types=\"react\" />\n  const Animator: (props: import(\"@arwes/react-animator/Animator/Animator.types\").AnimatorProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-animator/Animator/Animator.types';\n  export { Animator };\n\n}\ndeclare module '@arwes/react-animator/AnimatorGeneralProvider/AnimatorGeneralProvider' {\n  import { type ReactNode, type ReactElement } from 'react';\n  import type { AnimatorGeneralProviderSettings } from '@arwes/react-animator/types';\n  interface AnimatorGeneralProviderProps extends AnimatorGeneralProviderSettings {\n      children: ReactNode;\n  }\n  const AnimatorGeneralProvider: (props: AnimatorGeneralProviderProps) => ReactElement;\n  export type { AnimatorGeneralProviderProps };\n  export { AnimatorGeneralProvider };\n\n}\ndeclare module '@arwes/react-animator/AnimatorGeneralProvider/index' {\n  /// <reference types=\"react\" />\n  const AnimatorGeneralProvider: (props: import(\"@arwes/react-animator/AnimatorGeneralProvider/AnimatorGeneralProvider\").AnimatorGeneralProviderProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-animator/AnimatorGeneralProvider/AnimatorGeneralProvider';\n  export { AnimatorGeneralProvider };\n\n}\ndeclare module '@arwes/react-animator/index' {\n  export * from '@arwes/react-animator/types';\n  export * from '@arwes/react-animator/Animator/index';\n  export * from '@arwes/react-animator/useAnimator/index';\n  export * from '@arwes/react-animator/AnimatorGeneralProvider/index';\n  export * from '@arwes/react-animator/useAnimatorGeneral/index';\n\n}\ndeclare module '@arwes/react-animator/internal/AnimatorContext/AnimatorContext' {\n  /// <reference types=\"react\" />\n  import type { AnimatorInterface } from '@arwes/animator';\n  const AnimatorContext: import(\"react\").Context<AnimatorInterface | undefined>;\n  export { AnimatorContext };\n\n}\ndeclare module '@arwes/react-animator/internal/AnimatorContext/index' {\n  export * from '@arwes/react-animator/internal/AnimatorContext/AnimatorContext';\n\n}\ndeclare module '@arwes/react-animator/internal/AnimatorGeneralContext/AnimatorGeneralContext' {\n  /// <reference types=\"react\" />\n  import type { AnimatorGeneralInterface } from '@arwes/react-animator/types';\n  const AnimatorGeneralContext: import(\"react\").Context<AnimatorGeneralInterface | undefined>;\n  export { AnimatorGeneralContext };\n\n}\ndeclare module '@arwes/react-animator/internal/AnimatorGeneralContext/index' {\n  export * from '@arwes/react-animator/internal/AnimatorGeneralContext/AnimatorGeneralContext';\n\n}\ndeclare module '@arwes/react-animator/types' {\n  import type { AnimatorDuration } from '@arwes/animator';\n  export interface AnimatorGeneralProviderSettings {\n      /**\n       * If disabled, it will turn off all animated animations downwards the system.\n       */\n      disabled?: boolean;\n      /**\n       * If dismissed, it will inherit its parent animator interface, so the system\n       * will continue without this specific animator node.\n       */\n      dismissed?: boolean;\n      duration?: Partial<AnimatorDuration>;\n  }\n  export interface AnimatorGeneralInterface {\n      getSettings: () => AnimatorGeneralProviderSettings;\n  }\n\n}\ndeclare module '@arwes/react-animator/useAnimator/index' {\n  export * from '@arwes/react-animator/useAnimator/useAnimator';\n\n}\ndeclare module '@arwes/react-animator/useAnimator/useAnimator' {\n  import type { AnimatorInterface } from '@arwes/animator';\n  const useAnimator: () => AnimatorInterface | undefined;\n  export { useAnimator };\n\n}\ndeclare module '@arwes/react-animator/useAnimatorGeneral/index' {\n  export * from '@arwes/react-animator/useAnimatorGeneral/useAnimatorGeneral';\n\n}\ndeclare module '@arwes/react-animator/useAnimatorGeneral/useAnimatorGeneral' {\n  import type { AnimatorGeneralInterface } from '@arwes/react-animator/types';\n  const useAnimatorGeneral: () => AnimatorGeneralInterface | undefined;\n  export { useAnimatorGeneral };\n\n}\n\ndeclare module '@arwes/react-animator' {\n  import main = require('@arwes/react-animator/index');\n  export = main;\n}\n"},5488:e=>{e.exports="declare module '@arwes/react-bgs/Dots/Dots' {\n  import { type ReactElement } from 'react';\n  import { type DotsProps } from '@arwes/react-bgs/Dots/Dots.types';\n  const Dots: (props: DotsProps) => ReactElement;\n  export { Dots };\n\n}\ndeclare module '@arwes/react-bgs/Dots/Dots.types' {\n  import type { CSSProperties, ForwardedRef } from 'react';\n  export type DotsPropsOrigin = 'left' | 'right' | 'top' | 'bottom' | 'center' | [number, number];\n  export interface DotsProps {\n      elementRef?: ForwardedRef<HTMLCanvasElement>;\n      className?: string;\n      style?: CSSProperties;\n      /**\n       * Dot color.\n       */\n      color?: string;\n      /**\n       * Shape of the dot.\n       */\n      type?: 'box' | 'circle';\n      /**\n       * Distance between each dot center in pixels.\n       */\n      distance?: number;\n      /**\n       * Dot size in pixels.\n       */\n      size?: number;\n      /**\n       * Rectangle container axis or point [x, y] as percentages of the rectangle\n       * dimensions from 0 (0%) to 1 (100%).\n       * @example\n       * [0.2, 0.8] is x=20% and y=80% as origin.\n       */\n      origin?: DotsPropsOrigin;\n      /**\n       * Invert the animation to work \"to origin\" point instead \"from origin\" point.\n       */\n      originInverted?: boolean;\n  }\n\n}\ndeclare module '@arwes/react-bgs/Dots/getDistanceFromOriginToCornerProgress' {\n  import { type DotsPropsOrigin } from '@arwes/react-bgs/Dots/Dots.types';\n  const getDistanceFromOriginToCornerProgress: (width: number, height: number, x1: number, y1: number, origin: DotsPropsOrigin) => number;\n  export { getDistanceFromOriginToCornerProgress };\n\n}\ndeclare module '@arwes/react-bgs/Dots/index' {\n  /// <reference types=\"react\" />\n  const Dots: (props: import(\"@arwes/react-bgs/Dots/Dots.types\").DotsProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-bgs/Dots/Dots.types';\n  export { Dots };\n\n}\ndeclare module '@arwes/react-bgs/GridLines/GridLines' {\n  import { type ReactElement } from 'react';\n  import { type GridLinesProps } from '@arwes/react-bgs/GridLines/GridLines.types';\n  const GridLines: (props: GridLinesProps) => ReactElement;\n  export { GridLines };\n\n}\ndeclare module '@arwes/react-bgs/GridLines/GridLines.types' {\n  import type { CSSProperties, ForwardedRef } from 'react';\n  export interface GridLinesProps {\n      elementRef?: ForwardedRef<HTMLCanvasElement>;\n      className?: string;\n      style?: CSSProperties;\n      lineWidth?: number;\n      lineColor?: string;\n      horizontalLineDash?: number[];\n      verticalLineDash?: number[];\n      /**\n       * Distance between each line.\n       */\n      distance?: number;\n  }\n\n}\ndeclare module '@arwes/react-bgs/GridLines/index' {\n  /// <reference types=\"react\" />\n  const GridLines: (props: import(\"@arwes/react-bgs/GridLines/GridLines.types\").GridLinesProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-bgs/GridLines/GridLines.types';\n  export { GridLines };\n\n}\ndeclare module '@arwes/react-bgs/MovingLines/MovingLines' {\n  import { type ReactElement } from 'react';\n  import { type MovingLinesProps } from '@arwes/react-bgs/MovingLines/MovingLines.types';\n  const MovingLines: (props: MovingLinesProps) => ReactElement;\n  export { MovingLines };\n\n}\ndeclare module '@arwes/react-bgs/MovingLines/MovingLines.types' {\n  import type { CSSProperties, ForwardedRef } from 'react';\n  export interface MovingLinesProps {\n      elementRef?: ForwardedRef<HTMLCanvasElement>;\n      className?: string;\n      style?: CSSProperties;\n      lineWidth?: number;\n      lineColor?: string;\n      /**\n       * Distance between each line.\n       */\n      distance?: number;\n      /**\n       * Sets of lines per interval animation.\n       */\n      sets?: number;\n  }\n  export interface MovingLinesLineConfig {\n      distance: number;\n      positionsLength: number;\n      margin: number;\n      size: number;\n  }\n  export interface MovingLinesLine {\n      axis1: number;\n      axis2Initial: number;\n      length: number;\n  }\n\n}\ndeclare module '@arwes/react-bgs/MovingLines/index' {\n  /// <reference types=\"react\" />\n  const MovingLines: (props: import(\"@arwes/react-bgs/MovingLines/MovingLines.types\").MovingLinesProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-bgs/MovingLines/MovingLines.types';\n  export { MovingLines };\n\n}\ndeclare module '@arwes/react-bgs/Puffs/Puffs' {\n  import { type ReactElement } from 'react';\n  import { type PuffsProps } from '@arwes/react-bgs/Puffs/Puffs.types';\n  const Puffs: (props: PuffsProps) => ReactElement;\n  export { Puffs };\n\n}\ndeclare module '@arwes/react-bgs/Puffs/Puffs.types' {\n  import { type CSSProperties, type ForwardedRef } from 'react';\n  export interface PuffsProps {\n      elementRef?: ForwardedRef<HTMLCanvasElement>;\n      className?: string;\n      style?: CSSProperties;\n      /**\n       * Puff color.\n       */\n      color: string;\n      /**\n       * Number of puffs to create.\n       */\n      quantity: number;\n      /**\n       * Extra padding space in pixels of the canvas so the puffs have space to\n       * move when animating.\n       */\n      padding?: number;\n      /**\n       * Position X offset to animate in pixels. A static value and a dynamic value.\n       * @example\n       * [10, 50] means it will at least move 10 pixels to the right and plus\n       * a random value between 0 and 50 more.\n       */\n      xOffset?: [number, number];\n      /**\n       * Position Y offset to animate in pixels. A static value and a dynamic value.\n       * @example\n       * [10, 50] means it will at least move 10 pixels to the bottom and plus\n       * a random value between 0 and 50 more.\n       */\n      yOffset?: [number, number];\n      /**\n       * Radius initial value in pixels.\n       */\n      radiusInitial?: number;\n      /**\n       * Puff radius offset fixed and variation values in pixels.\n       * @example\n       * [4, 8] means the puff radius offset will be at least 4 pixels plus a random\n       * value between 0 and 8 more.\n       */\n      radiusOffset?: [number, number];\n      /**\n       * Sets of puffs per interval animation.\n       */\n      sets?: number;\n  }\n\n}\ndeclare module '@arwes/react-bgs/Puffs/index' {\n  /// <reference types=\"react\" />\n  const Puffs: (props: import(\"@arwes/react-bgs/Puffs/Puffs.types\").PuffsProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-bgs/Puffs/Puffs.types';\n  export { Puffs };\n\n}\ndeclare module '@arwes/react-bgs/index' {\n  export * from '@arwes/react-bgs/Dots/index';\n  export * from '@arwes/react-bgs/Puffs/index';\n  export * from '@arwes/react-bgs/GridLines/index';\n  export * from '@arwes/react-bgs/MovingLines/index';\n\n}\n\ndeclare module '@arwes/react-bgs' {\n  import main = require('@arwes/react-bgs/index');\n  export = main;\n}\n"},6319:e=>{e.exports="declare module '@arwes/react-bleeps/BleepsProvider/BleepsProvider' {\n  import type { ReactNode, ReactElement } from 'react';\n  import type { BleepsManagerProps } from '@arwes/bleeps';\n  interface BleepsProviderSettings<BleepsNames extends string = string> extends BleepsManagerProps<BleepsNames> {\n  }\n  interface BleepsProviderProps<BleepsNames extends string = string> extends BleepsProviderSettings<BleepsNames> {\n      children: ReactNode;\n  }\n  const BleepsProvider: <BleepsNames extends string = string>(props: BleepsProviderProps<BleepsNames>) => ReactElement;\n  export type { BleepsProviderSettings, BleepsProviderProps };\n  export { BleepsProvider };\n\n}\ndeclare module '@arwes/react-bleeps/BleepsProvider/index' {\n  /// <reference types=\"react\" />\n  const BleepsProvider: <BleepsNames extends string = string>(props: import(\"@arwes/react-bleeps/BleepsProvider/BleepsProvider\").BleepsProviderProps<BleepsNames>) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-bleeps/BleepsProvider/BleepsProvider';\n  export { BleepsProvider };\n\n}\ndeclare module '@arwes/react-bleeps/index' {\n  export * from '@arwes/react-bleeps/BleepsProvider/index';\n  export * from '@arwes/react-bleeps/useBleeps/index';\n\n}\ndeclare module '@arwes/react-bleeps/internal/BleepsManagerContext' {\n  /// <reference types=\"react\" />\n  import type { BleepsManager } from '@arwes/bleeps';\n  const BleepsManagerContext: import(\"react\").Context<BleepsManager<string> | null>;\n  export { BleepsManagerContext };\n\n}\ndeclare module '@arwes/react-bleeps/useBleeps/index' {\n  export * from '@arwes/react-bleeps/useBleeps/useBleeps';\n\n}\ndeclare module '@arwes/react-bleeps/useBleeps/useBleeps' {\n  import type { BleepsManager } from '@arwes/bleeps';\n  interface UseBleepsProps {\n      disabled?: boolean | undefined;\n  }\n  const useBleeps: <BleepsNames extends string, Manager extends BleepsManager<string> = BleepsManager<BleepsNames>>(props?: UseBleepsProps) => Manager[\"bleeps\"];\n  export type { UseBleepsProps };\n  export { useBleeps };\n\n}\n\ndeclare module '@arwes/react-bleeps' {\n  import main = require('@arwes/react-bleeps/index');\n  export = main;\n}\n"},7527:e=>{e.exports="declare module '@arwes/react-core/BleepsOnAnimator/BleepsOnAnimator' {\n  import { type ReactElement } from 'react';\n  import { type AnimatorState } from '@arwes/animator';\n  type Transitions<BleepsNames extends string> = {\n      [p in AnimatorState]?: BleepsNames;\n  };\n  interface BleepsOnAnimatorProps<BleepsNames extends string = string> {\n      id?: string;\n      transitions: Transitions<BleepsNames>;\n      continuous?: boolean;\n  }\n  const BleepsOnAnimator: <BleepsNames extends string = string>(props: BleepsOnAnimatorProps<BleepsNames>) => ReactElement;\n  export type { BleepsOnAnimatorProps };\n  export { BleepsOnAnimator };\n\n}\ndeclare module '@arwes/react-core/BleepsOnAnimator/index' {\n  /// <reference types=\"react\" />\n  const BleepsOnAnimator: <BleepsNames extends string = string>(props: import(\"@arwes/react-core/BleepsOnAnimator/BleepsOnAnimator\").BleepsOnAnimatorProps<BleepsNames>) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-core/BleepsOnAnimator/BleepsOnAnimator';\n  export { BleepsOnAnimator };\n\n}\ndeclare module '@arwes/react-core/index' {\n  export * from '@arwes/react-core/BleepsOnAnimator/index';\n\n}\n\ndeclare module '@arwes/react-core' {\n  import main = require('@arwes/react-core/index');\n  export = main;\n}\n"},1586:e=>{e.exports="declare module '@arwes/react-frames/FrameSVG/FrameSVG' {\n  import { type SVGProps, type ForwardedRef, type ReactElement, type ReactNode, type CSSProperties } from 'react';\n  import { type FrameSVGPathGeneric } from '@arwes/frames';\n  interface FrameSVGProps extends SVGProps<SVGSVGElement> {\n      paths?: FrameSVGPathGeneric[];\n      onRender?: (svg: SVGSVGElement, width: number, height: number) => void;\n      className?: string;\n      style?: CSSProperties;\n      elementRef?: ForwardedRef<SVGSVGElement>;\n      children?: ReactNode;\n  }\n  const FrameSVG: (props: FrameSVGProps) => ReactElement;\n  export type { FrameSVGProps };\n  export { FrameSVG };\n\n}\ndeclare module '@arwes/react-frames/FrameSVG/index' {\n  /// <reference types=\"react\" />\n  const FrameSVG: (props: import(\"@arwes/react-frames/FrameSVG/FrameSVG\").FrameSVGProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/FrameSVG/FrameSVG';\n  export { FrameSVG };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGCorners/FrameSVGCorners' {\n  import { type ReactElement } from 'react';\n  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';\n  interface FrameSVGCornersProps extends FrameSVGProps {\n      strokeWidth?: number;\n      cornerLength?: number;\n      className?: string;\n  }\n  const FrameSVGCorners: (props: FrameSVGCornersProps) => ReactElement;\n  export type { FrameSVGCornersProps };\n  export { FrameSVGCorners };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGCorners/index' {\n  /// <reference types=\"react\" />\n  const FrameSVGCorners: (props: import(\"@arwes/react-frames/FrameSVGCorners/FrameSVGCorners\").FrameSVGCornersProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/FrameSVGCorners/FrameSVGCorners';\n  export { FrameSVGCorners };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGKranox/FrameSVGKranox' {\n  import { type ReactElement } from 'react';\n  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';\n  interface FrameSVGKranoxProps extends FrameSVGProps {\n      squareSize?: number;\n      padding?: number;\n      strokeWidth?: number;\n      smallLineLength?: number;\n      largeLineLength?: number;\n      className?: string;\n  }\n  const FrameSVGKranox: (props: FrameSVGKranoxProps) => ReactElement;\n  export type { FrameSVGKranoxProps };\n  export { FrameSVGKranox };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGKranox/index' {\n  /// <reference types=\"react\" />\n  const FrameSVGKranox: (props: import(\"@arwes/react-frames/FrameSVGKranox/FrameSVGKranox\").FrameSVGKranoxProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/FrameSVGKranox/FrameSVGKranox';\n  export { FrameSVGKranox };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGLines/FrameSVGLines' {\n  import { type ReactElement } from 'react';\n  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';\n  interface FrameSVGLinesProps extends FrameSVGProps {\n      largeLineWidth?: number;\n      smallLineWidth?: number;\n      smallLineLength?: number;\n      className?: string;\n  }\n  const FrameSVGLines: (props: FrameSVGLinesProps) => ReactElement;\n  export type { FrameSVGLinesProps };\n  export { FrameSVGLines };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGLines/index' {\n  /// <reference types=\"react\" />\n  const FrameSVGLines: (props: import(\"@arwes/react-frames/FrameSVGLines/FrameSVGLines\").FrameSVGLinesProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/FrameSVGLines/FrameSVGLines';\n  export { FrameSVGLines };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGNefrex/FrameSVGNefrex' {\n  import { type ReactElement } from 'react';\n  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';\n  interface FrameSVGNefrexProps extends FrameSVGProps {\n      squareSize?: number;\n      padding?: number;\n      strokeWidth?: number;\n      smallLineLength?: number;\n      largeLineLength?: number;\n      className?: string;\n  }\n  const FrameSVGNefrex: (props: FrameSVGNefrexProps) => ReactElement;\n  export type { FrameSVGNefrexProps };\n  export { FrameSVGNefrex };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGNefrex/index' {\n  /// <reference types=\"react\" />\n  const FrameSVGNefrex: (props: import(\"@arwes/react-frames/FrameSVGNefrex/FrameSVGNefrex\").FrameSVGNefrexProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/FrameSVGNefrex/FrameSVGNefrex';\n  export { FrameSVGNefrex };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGOctagon/FrameSVGOctagon' {\n  import { type ReactElement } from 'react';\n  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';\n  interface FrameSVGOctagonProps extends FrameSVGProps {\n      leftTop?: boolean;\n      rightTop?: boolean;\n      rightBottom?: boolean;\n      leftBottom?: boolean;\n      squareSize?: number;\n      padding?: number;\n      strokeWidth?: number;\n      className?: string;\n  }\n  const FrameSVGOctagon: (props: FrameSVGOctagonProps) => ReactElement;\n  export type { FrameSVGOctagonProps };\n  export { FrameSVGOctagon };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGOctagon/index' {\n  /// <reference types=\"react\" />\n  const FrameSVGOctagon: (props: import(\"@arwes/react-frames/FrameSVGOctagon/FrameSVGOctagon\").FrameSVGOctagonProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/FrameSVGOctagon/FrameSVGOctagon';\n  export { FrameSVGOctagon };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGUnderline/FrameSVGUnderline' {\n  import { type ReactElement } from 'react';\n  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';\n  interface FrameSVGUnderlineProps extends FrameSVGProps {\n      squareSize?: number;\n      strokeWidth?: number;\n      inverted?: boolean;\n      className?: string;\n  }\n  const FrameSVGUnderline: (props: FrameSVGUnderlineProps) => ReactElement;\n  export type { FrameSVGUnderlineProps };\n  export { FrameSVGUnderline };\n\n}\ndeclare module '@arwes/react-frames/FrameSVGUnderline/index' {\n  /// <reference types=\"react\" />\n  const FrameSVGUnderline: (props: import(\"@arwes/react-frames/FrameSVGUnderline/FrameSVGUnderline\").FrameSVGUnderlineProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/FrameSVGUnderline/FrameSVGUnderline';\n  export { FrameSVGUnderline };\n\n}\ndeclare module '@arwes/react-frames/Illuminator/Illuminator' {\n  import { type ReactElement, type CSSProperties, type ForwardedRef } from 'react';\n  interface IlluminatorProps {\n      color?: string;\n      size?: number;\n      className?: string;\n      style?: CSSProperties;\n      elementRef?: ForwardedRef<SVGGElement>;\n  }\n  const Illuminator: (props: IlluminatorProps) => ReactElement;\n  export type { IlluminatorProps };\n  export { Illuminator };\n\n}\ndeclare module '@arwes/react-frames/Illuminator/index' {\n  /// <reference types=\"react\" />\n  const Illuminator: (props: import(\"@arwes/react-frames/Illuminator/Illuminator\").IlluminatorProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/Illuminator/Illuminator';\n  export { Illuminator };\n\n}\ndeclare module '@arwes/react-frames/IlluminatorSVG/IlluminatorSVG' {\n  import { type ReactElement, type CSSProperties, type ForwardedRef } from 'react';\n  interface IlluminatorSVGProps {\n      color?: string;\n      size?: number;\n      className?: string;\n      style?: CSSProperties;\n      elementRef?: ForwardedRef<SVGGElement>;\n  }\n  const IlluminatorSVG: (props: IlluminatorSVGProps) => ReactElement;\n  export type { IlluminatorSVGProps };\n  export { IlluminatorSVG };\n\n}\ndeclare module '@arwes/react-frames/IlluminatorSVG/index' {\n  /// <reference types=\"react\" />\n  const IlluminatorSVG: (props: import(\"@arwes/react-frames/IlluminatorSVG/IlluminatorSVG\").IlluminatorSVGProps) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-frames/IlluminatorSVG/IlluminatorSVG';\n  export { IlluminatorSVG };\n\n}\ndeclare module '@arwes/react-frames/index' {\n  export * from '@arwes/react-frames/useFrameSVGRenderer/index';\n  export * from '@arwes/react-frames/useFrameSVGAssemblingAnimation/index';\n  export * from '@arwes/react-frames/FrameSVG/index';\n  export * from '@arwes/react-frames/FrameSVGOctagon/index';\n  export * from '@arwes/react-frames/FrameSVGUnderline/index';\n  export * from '@arwes/react-frames/FrameSVGCorners/index';\n  export * from '@arwes/react-frames/FrameSVGLines/index';\n  export * from '@arwes/react-frames/FrameSVGNefrex/index';\n  export * from '@arwes/react-frames/FrameSVGKranox/index';\n  export * from '@arwes/react-frames/IlluminatorSVG/index';\n  export * from '@arwes/react-frames/Illuminator/index';\n\n}\ndeclare module '@arwes/react-frames/useFrameSVGAssemblingAnimation/index' {\n  export * from '@arwes/react-frames/useFrameSVGAssemblingAnimation/useFrameSVGAssemblingAnimation';\n\n}\ndeclare module '@arwes/react-frames/useFrameSVGAssemblingAnimation/useFrameSVGAssemblingAnimation' {\n  import { type RefObject } from 'react';\n  interface FrameSVGAssemblingAnimation {\n      onRender: () => void;\n  }\n  const useFrameSVGAssemblingAnimation: (svgRef: RefObject<SVGSVGElement>) => FrameSVGAssemblingAnimation;\n  export type { FrameSVGAssemblingAnimation };\n  export { useFrameSVGAssemblingAnimation };\n\n}\ndeclare module '@arwes/react-frames/useFrameSVGRenderer/index' {\n  export * from '@arwes/react-frames/useFrameSVGRenderer/useFrameSVGRenderer';\n\n}\ndeclare module '@arwes/react-frames/useFrameSVGRenderer/useFrameSVGRenderer' {\n  import { type RefObject } from 'react';\n  const useFrameSVGRenderer: (svgRef: RefObject<SVGSVGElement>, onRenderExternal: (svg: SVGSVGElement, width: number, height: number) => void) => void;\n  export { useFrameSVGRenderer };\n\n}\n\ndeclare module '@arwes/react-frames' {\n  import main = require('@arwes/react-frames/index');\n  export = main;\n}\n"},2900:e=>{e.exports="declare module '@arwes/react-styles/constants' {\n  import type { Styles } from '@arwes/react-styles/types';\n  export const STYLES_EMPTY: Styles;\n\n}\ndeclare module '@arwes/react-styles/index' {\n  export * from '@arwes/react-styles/types';\n  export * from '@arwes/react-styles/constants';\n  export * from '@arwes/react-styles/useStyles/index';\n  export * from '@arwes/react-styles/useThemeStyles/index';\n\n}\ndeclare module '@arwes/react-styles/internal/mergeThemeStyles' {\n  import type { Styles } from '@arwes/react-styles/types';\n  const mergeThemeStyles: (styles1: Styles, styles2: Styles) => Styles;\n  export { mergeThemeStyles };\n\n}\ndeclare module '@arwes/react-styles/types' {\n  import type { Theme, CSSObject } from '@emotion/react';\n  export type Style = CSSObject;\n  export type Styles = Record<string, Style>;\n  export type StylesCreatorFunction<P = undefined> = (props: P) => Styles;\n  export type StylesCreator<P = undefined> = StylesCreatorFunction<P> | Styles | false | null | undefined;\n  export type StylesThemeCreatorFunction<P = undefined> = (theme: Theme, props: P) => Styles;\n  export type StylesThemeCreator<P = undefined> = StylesThemeCreatorFunction<P> | Styles | false | null | undefined;\n\n}\ndeclare module '@arwes/react-styles/useStyles/index' {\n  export * from '@arwes/react-styles/useStyles/useStyles';\n\n}\ndeclare module '@arwes/react-styles/useStyles/useStyles' {\n  import { type Styles, type StylesCreatorFunction, type StylesCreator } from '@arwes/react-styles/types';\n  const useStyles: <P = undefined>(stylesList: [StylesCreatorFunction<P>, StylesCreator<P>], props: P, dependencies: unknown[]) => Styles;\n  export { useStyles };\n\n}\ndeclare module '@arwes/react-styles/useThemeStyles/index' {\n  export * from '@arwes/react-styles/useThemeStyles/useThemeStyles';\n\n}\ndeclare module '@arwes/react-styles/useThemeStyles/useThemeStyles' {\n  import { type Styles, type StylesThemeCreator, type StylesThemeCreatorFunction } from '@arwes/react-styles/types';\n  const useThemeStyles: <P = null>(styleCreators: [StylesThemeCreatorFunction<P>, StylesThemeCreator<P>?], props: P, dependencies: unknown[]) => Styles;\n  export { useThemeStyles };\n\n}\n\ndeclare module '@arwes/react-styles' {\n  import main = require('@arwes/react-styles/index');\n  export = main;\n}\n"},4935:e=>{e.exports="declare module '@arwes/react-text/Text/Text' {\n  import { type ReactNode, type ReactElement, type HTMLProps, type ForwardedRef } from 'react';\n  import { type easing } from '@arwes/animated';\n  import { type TextTransitionManager } from '@arwes/text';\n  interface TextProps<E extends HTMLElement = HTMLSpanElement> extends HTMLProps<E> {\n      as?: keyof HTMLElementTagNameMap;\n      className?: string;\n      contentClassName?: string;\n      elementRef?: ForwardedRef<E>;\n      manager?: TextTransitionManager;\n      easing?: keyof typeof easing;\n      /**\n       * If the duration of the animation should be fixed by the parent Animator\n       * or dynamic according to its children.\n       */\n      fixed?: boolean;\n      hideOnExited?: boolean;\n      hideOnEntered?: boolean;\n      children: ReactNode;\n  }\n  const TEXT_CLASS = \"arwes-react-text-text\";\n  const Text: <E extends HTMLElement = HTMLSpanElement>(props: TextProps<E>) => ReactElement;\n  export type { TextProps };\n  export { TEXT_CLASS, Text };\n\n}\ndeclare module '@arwes/react-text/Text/index' {\n  /// <reference types=\"react\" />\n  const Text: <E extends HTMLElement = HTMLSpanElement>(props: import(\"@arwes/react-text/Text/Text\").TextProps<E>) => import(\"react\").ReactElement<any, string | import(\"react\").JSXElementConstructor<any>>;\n  export * from '@arwes/react-text/Text/Text';\n  export { Text };\n\n}\ndeclare module '@arwes/react-text/index' {\n  export * from '@arwes/react-text/Text/index';\n\n}\n\ndeclare module '@arwes/react-text' {\n  import main = require('@arwes/react-text/index');\n  export = main;\n}\n"},8266:e=>{e.exports="declare module '@arwes/react/index' {\n  export * from 'arwes';\n  export * from '@arwes/react-tools';\n  export * from '@arwes/react-animator';\n  export * from '@arwes/react-animated';\n  export * from '@arwes/react-bleeps';\n  export * from '@arwes/react-text';\n  export * from '@arwes/react-frames';\n  export * from '@arwes/react-bgs';\n  export * from '@arwes/react-core';\n\n}\n\ndeclare module '@arwes/react' {\n  import main = require('@arwes/react/index');\n  export = main;\n}\n"},73:e=>{e.exports="declare module 'arwes/index' {\n  export * from '@arwes/tools';\n  export * from '@arwes/theme';\n  export * from '@arwes/animator';\n  export * from '@arwes/animated';\n  export * from '@arwes/bleeps';\n  export * from '@arwes/text';\n  export * from '@arwes/frames';\n  export * from '@arwes/bgs';\n  export * from '@arwes/core';\n\n}\n\ndeclare module 'arwes' {\n  import main = require('arwes/index');\n  export = main;\n}\n"},3936:e=>{e.exports="declare module '@arwes/text/getTransitionTextDuration/getTransitionTextDuration' {\n  interface GetTransitionTextDurationProps {\n      /**\n       * Text length.\n       */\n      length: number;\n      /**\n       * Maximum duration in seconds.\n       */\n      maxDuration?: number;\n      /**\n       * Characters per second.\n       */\n      cps?: number;\n  }\n  const getTransitionTextDuration: (props: GetTransitionTextDurationProps) => number;\n  export { getTransitionTextDuration };\n\n}\ndeclare module '@arwes/text/getTransitionTextDuration/index' {\n  export * from '@arwes/text/getTransitionTextDuration/getTransitionTextDuration';\n\n}\ndeclare module '@arwes/text/index' {\n  export * from '@arwes/text/types';\n  export * from '@arwes/text/transitionTextSequence/index';\n  export * from '@arwes/text/transitionTextDecipher/index';\n  export * from '@arwes/text/getTransitionTextDuration/index';\n\n}\ndeclare module '@arwes/text/internal/setTextNodesContent/index' {\n  export * from '@arwes/text/internal/setTextNodesContent/setTextNodesContent';\n\n}\ndeclare module '@arwes/text/internal/setTextNodesContent/setTextNodesContent' {\n  const setTextNodesContent: (textNodes: Node[], texts: string[], contentLength: number) => void;\n  export { setTextNodesContent };\n\n}\ndeclare module '@arwes/text/internal/walkTextNodes/index' {\n  export * from '@arwes/text/internal/walkTextNodes/walkTextNodes';\n\n}\ndeclare module '@arwes/text/internal/walkTextNodes/walkTextNodes' {\n  const walkTextNodes: (node: Node, callback: (child: Node) => void) => void;\n  export { walkTextNodes };\n\n}\ndeclare module '@arwes/text/transitionTextDecipher/index' {\n  export * from '@arwes/text/transitionTextDecipher/transitionTextDecipher';\n\n}\ndeclare module '@arwes/text/transitionTextDecipher/transitionTextDecipher' {\n  import { type Animation } from '@arwes/animated';\n  import type { TextTransitionProps } from '@arwes/text/types';\n  const transitionTextDecipher: (props: TextTransitionProps) => Animation;\n  export { transitionTextDecipher };\n\n}\ndeclare module '@arwes/text/transitionTextSequence/index' {\n  export * from '@arwes/text/transitionTextSequence/transitionTextSequence';\n\n}\ndeclare module '@arwes/text/transitionTextSequence/transitionTextSequence' {\n  import { type Animation } from '@arwes/animated';\n  import type { TextTransitionProps } from '@arwes/text/types';\n  const transitionTextSequence: (props: TextTransitionProps) => Animation;\n  export { transitionTextSequence };\n\n}\ndeclare module '@arwes/text/types' {\n  import { type easing } from '@arwes/animated';\n  export type TextTransitionManager = 'sequence' | 'decipher';\n  export interface TextTransitionProps {\n      rootElement: HTMLElement;\n      contentElement: HTMLElement;\n      /**\n       * Transition duration in seconds.\n       */\n      duration: number;\n      easing?: keyof typeof easing;\n      isEntering?: boolean;\n      hideOnExited?: boolean;\n      hideOnEntered?: boolean;\n  }\n\n}\n\ndeclare module '@arwes/text' {\n  import main = require('@arwes/text/index');\n  export = main;\n}\n"},8819:e=>{e.exports="declare module '@arwes/theme/createAppTheme/createAppTheme' {\n  import type { PartialDeep } from '@arwes/tools';\n  import type { ThemeCreatorStructure, ThemeSettingsUnit, ThemeSettingsColor, ThemeSettingsStyle, ThemeUnit, ThemeColor, ThemeStyle, ThemeSettingsMultiplier, ThemeMultiplier } from '@arwes/theme/types';\n  interface AppThemeSettingsPalette {\n      main: ThemeSettingsColor;\n      text: ThemeSettingsColor;\n      deco: ThemeSettingsColor;\n      bg: ThemeSettingsColor;\n      ol: ThemeSettingsColor;\n  }\n  interface AppThemeSettingsColors {\n      primary: AppThemeSettingsPalette;\n      secondary: AppThemeSettingsPalette;\n      success: AppThemeSettingsPalette;\n      info: AppThemeSettingsPalette;\n      warning: AppThemeSettingsPalette;\n      error: AppThemeSettingsPalette;\n  }\n  interface AppThemeSettingsHues {\n      primary: number;\n      secondary: number;\n      success: number;\n      info: number;\n      warning: number;\n      error: number;\n  }\n  interface AppThemeSettings {\n      dark: boolean;\n      space: ThemeSettingsUnit;\n      spaceN: ThemeSettingsMultiplier;\n      hues: AppThemeSettingsHues;\n      colors: AppThemeSettingsColors;\n      fontFamilies: {\n          title: string;\n          body: string;\n          cta: string;\n          input: string;\n          code: string;\n      };\n      typography: {\n          title: ThemeSettingsStyle;\n          body: ThemeSettingsStyle;\n          cta: ThemeSettingsStyle;\n          input: ThemeSettingsStyle;\n          code: ThemeSettingsStyle;\n      };\n      transitions: {\n          duration: ThemeSettingsUnit;\n          durationN: ThemeSettingsMultiplier;\n      };\n  }\n  interface AppThemePalette {\n      main: ThemeColor;\n      text: ThemeColor;\n      deco: ThemeColor;\n      bg: ThemeColor;\n      ol: ThemeColor;\n  }\n  interface AppThemeColors {\n      primary: AppThemePalette;\n      secondary: AppThemePalette;\n      success: AppThemePalette;\n      info: AppThemePalette;\n      warning: AppThemePalette;\n      error: AppThemePalette;\n  }\n  type AppThemeHues = AppThemeSettingsHues;\n  interface AppTheme {\n      dark: boolean;\n      space: ThemeUnit;\n      spaceN: ThemeMultiplier;\n      hues: AppThemeHues;\n      colors: AppThemeColors;\n      fontFamilies: {\n          title: string;\n          body: string;\n          cta: string;\n          input: string;\n          code: string;\n      };\n      typography: {\n          title: ThemeStyle;\n          body: ThemeStyle;\n          cta: ThemeStyle;\n          input: ThemeStyle;\n          code: ThemeStyle;\n      };\n      transitions: {\n          duration: ThemeUnit;\n          durationN: ThemeMultiplier;\n      };\n  }\n  const APP_THEME_STRUCTURE_PALETTE: ThemeCreatorStructure;\n  const APP_THEME_STRUCTURE: ThemeCreatorStructure;\n  interface CreateAppThemeProps<AppThemeSettingsExt extends AppThemeSettings = AppThemeSettings> {\n      structure?: ThemeCreatorStructure;\n      settings?: PartialDeep<AppThemeSettingsExt>;\n  }\n  const createAppThemePalette: (hue: number) => AppThemeSettingsPalette;\n  const createAppTheme: <AppThemeSettingsExt extends AppThemeSettings = AppThemeSettings, AppThemeExt extends AppTheme = AppTheme>(props?: CreateAppThemeProps<AppThemeSettingsExt>) => AppThemeExt;\n  export type { AppThemeSettingsColors, AppThemeSettingsPalette, AppThemeSettingsHues, AppThemeSettings, AppThemePalette, AppThemeColors, AppThemeHues, AppTheme, CreateAppThemeProps };\n  export { APP_THEME_STRUCTURE_PALETTE, APP_THEME_STRUCTURE, createAppThemePalette, createAppTheme };\n\n}\ndeclare module '@arwes/theme/createAppTheme/deepExtend' {\n  function deepExtend(target?: any, extension?: any): any;\n  export { deepExtend };\n\n}\ndeclare module '@arwes/theme/createAppTheme/index' {\n  export * from '@arwes/theme/createAppTheme/createAppTheme';\n\n}\ndeclare module '@arwes/theme/createCreateTheme/createCreateTheme' {\n  import type { ThemeCreatorStructure, ThemeCreator } from '@arwes/theme/types';\n  const createCreateTheme: <ThemeSettings, Theme>(themeStructure: ThemeCreatorStructure, themeSettingsDefaults: ThemeSettings) => ThemeCreator<ThemeSettings, Theme>;\n  export { createCreateTheme };\n\n}\ndeclare module '@arwes/theme/createCreateTheme/index' {\n  export { createCreateTheme } from '@arwes/theme/createCreateTheme/createCreateTheme';\n\n}\ndeclare module '@arwes/theme/createThemeBreakpoints/createThemeBreakpoints' {\n  import type { ThemeSettingsBreakpoints, ThemeBreakpoints } from '@arwes/theme/types';\n  const createThemeBreakpoints: (settings?: ThemeSettingsBreakpoints) => ThemeBreakpoints;\n  export { createThemeBreakpoints };\n\n}\ndeclare module '@arwes/theme/createThemeBreakpoints/index' {\n  export { createThemeBreakpoints } from '@arwes/theme/createThemeBreakpoints/createThemeBreakpoints';\n\n}\ndeclare module '@arwes/theme/createThemeColor/createThemeColor' {\n  import type { ThemeSettingsColor, ThemeColor } from '@arwes/theme/types';\n  const createThemeColor: (settings: ThemeSettingsColor) => ThemeColor;\n  export { createThemeColor };\n\n}\ndeclare module '@arwes/theme/createThemeColor/index' {\n  export { createThemeColor } from '@arwes/theme/createThemeColor/createThemeColor';\n\n}\ndeclare module '@arwes/theme/createThemeMultiplier/createThemeMultiplier' {\n  import type { ThemeSettingsMultiplier } from '@arwes/theme/types';\n  const createThemeMultiplier: (settings: ThemeSettingsMultiplier) => (index: number) => number;\n  export { createThemeMultiplier };\n\n}\ndeclare module '@arwes/theme/createThemeMultiplier/index' {\n  export { createThemeMultiplier } from '@arwes/theme/createThemeMultiplier/createThemeMultiplier';\n\n}\ndeclare module '@arwes/theme/createThemeStyle/createThemeStyle' {\n  import type { ThemeSettingsStyle, ThemeStyleValue } from '@arwes/theme/types';\n  const createThemeStyle: (series: ThemeSettingsStyle) => (indexProvided: number) => ThemeStyleValue;\n  export { createThemeStyle };\n\n}\ndeclare module '@arwes/theme/createThemeStyle/index' {\n  export { createThemeStyle } from '@arwes/theme/createThemeStyle/createThemeStyle';\n\n}\ndeclare module '@arwes/theme/createThemeUnit/createThemeUnit' {\n  import type { ThemeSettingsUnit, ThemeUnit } from '@arwes/theme/types';\n  const createThemeUnit: (settings: ThemeSettingsUnit) => ThemeUnit;\n  export { createThemeUnit };\n\n}\ndeclare module '@arwes/theme/createThemeUnit/index' {\n  export * from '@arwes/theme/createThemeUnit/createThemeUnit';\n\n}\ndeclare module '@arwes/theme/index' {\n  export * from '@arwes/theme/types';\n  export * from '@arwes/theme/createThemeMultiplier/index';\n  export * from '@arwes/theme/createThemeUnit/index';\n  export * from '@arwes/theme/createThemeColor/index';\n  export * from '@arwes/theme/createThemeStyle/index';\n  export * from '@arwes/theme/createThemeBreakpoints/index';\n  export * from '@arwes/theme/createCreateTheme/index';\n  export * from '@arwes/theme/createAppTheme/index';\n\n}\ndeclare module '@arwes/theme/types' {\n  import type { Properties as CSSProperties } from 'csstype';\n  import type { PartialDeep } from '@arwes/tools';\n  export type ThemeSettingsMultiplierFunction = (index: number) => number;\n  export type ThemeSettingsMultiplier = number | number[] | ThemeSettingsMultiplierFunction;\n  export type ThemeSettingsUnitFunction = (index: number) => string;\n  export type ThemeSettingsUnit = string[] | ThemeSettingsUnitFunction;\n  export type ThemeSettingsColor = Array<[number, number, number, number?] | string> | ((index: number) => [number, number, number, number?] | string);\n  export type ThemeSettingsStyle = ThemeStyleValue[];\n  export interface ThemeSettingsBreakpointsKeyListItem {\n      key: string;\n      value: string;\n  }\n  export type ThemeSettingsBreakpoints = string[] | ThemeSettingsBreakpointsKeyListItem[];\n  export type ThemeMultiplier = (index: number) => number;\n  export type ThemeUnit = (index: number | string | Array<number | string>) => string;\n  export interface ThemeColorOptions {\n      alpha?: number;\n  }\n  export type ThemeColor = (index: number, options?: ThemeColorOptions) => string;\n  export type ThemeStyleValue = CSSProperties;\n  export type ThemeStyle = (index: number) => ThemeStyleValue;\n  export interface ThemeBreakpoints {\n      settings: ThemeSettingsBreakpoints;\n      up: (key: string | number, opts?: {\n          strip?: boolean;\n      }) => string;\n      down: (key: string | number, opts?: {\n          strip?: boolean;\n      }) => string;\n      between: (startKey: string | number, endKey: string | number, opts?: {\n          strip?: boolean;\n      }) => string;\n  }\n  export interface ThemeCreatorStructure {\n      [key: string]: 'multiplier' | 'unit' | 'color' | 'style' | 'breakpoints' | 'other' | ThemeCreatorStructure;\n  }\n  export interface ThemeCreatorOptions {\n      getCacheColorScheme: () => string | null | undefined;\n      setCacheColorScheme: (colorScheme: string) => void;\n  }\n  export type ThemeCreator<ThemeSettings, Theme> = (themeSettingsExtensions?: PartialDeep<ThemeSettings> | Array<PartialDeep<ThemeSettings> | undefined> | undefined) => Theme;\n\n}\n\ndeclare module '@arwes/theme' {\n  import main = require('@arwes/theme/index');\n  export = main;\n}\n"},544:e=>{e.exports="declare module '@arwes/tools/constants' {\n  export const IS_BROWSER: boolean;\n  export const IS_BROWSER_SAFARI: boolean;\n\n}\ndeclare module '@arwes/tools/createTOScheduler/createTOScheduler' {\n  type TOSchedulerId = number | string;\n  type TOSchedulerCallback = () => unknown;\n  function TOSchedulerStart(id: TOSchedulerId, delay: number, callback: TOSchedulerCallback): void;\n  function TOSchedulerStart(delay: number, callback: TOSchedulerCallback): void;\n  interface TOScheduler {\n      isPending: (id?: TOSchedulerId) => boolean;\n      stop: (id?: TOSchedulerId) => void;\n      stopAll: () => void;\n      start: typeof TOSchedulerStart;\n  }\n  function createTOScheduler(): TOScheduler;\n  export type { TOScheduler };\n  export { createTOScheduler };\n\n}\ndeclare module '@arwes/tools/createTOScheduler/index' {\n  export * from '@arwes/tools/createTOScheduler/createTOScheduler';\n\n}\ndeclare module '@arwes/tools/cx/cx' {\n  const cx: (...classNames: Array<string | boolean | undefined | null>) => string;\n  export { cx };\n\n}\ndeclare module '@arwes/tools/cx/index' {\n  export * from '@arwes/tools/cx/cx';\n\n}\ndeclare module '@arwes/tools/index' {\n  export * from '@arwes/tools/types';\n  export * from '@arwes/tools/constants';\n  export * from '@arwes/tools/cx/index';\n  export * from '@arwes/tools/loadImage/index';\n  export * from '@arwes/tools/createTOScheduler/index';\n  export * from '@arwes/tools/randomizeList/index';\n\n}\ndeclare module '@arwes/tools/loadImage/index' {\n  export * from '@arwes/tools/loadImage/loadImage';\n\n}\ndeclare module '@arwes/tools/loadImage/loadImage' {\n  const loadImage: (url: string) => Promise<HTMLImageElement>;\n  export { loadImage };\n\n}\ndeclare module '@arwes/tools/randomizeList/index' {\n  export * from '@arwes/tools/randomizeList/randomizeList';\n\n}\ndeclare module '@arwes/tools/randomizeList/randomizeList' {\n  const randomizeList: <T>(providedList: T[]) => T[];\n  export { randomizeList };\n\n}\ndeclare module '@arwes/tools/types' {\n  export type PartialDeep<T> = {\n      [P in keyof T]?: PartialDeep<T[P]>;\n  };\n  /**\n   * Extracted from https://stackoverflow.com/questions/56687668\n   */\n  export type NoInfer<T> = [T][T extends any ? 0 : never];\n\n}\n\ndeclare module '@arwes/tools' {\n  import main = require('@arwes/tools/index');\n  export = main;\n}\n"}}]);